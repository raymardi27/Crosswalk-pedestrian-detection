# Specify the path to your CUDA installation
CUDA_PATH ?= /usr/local/cuda

# Compiler
CXX := g++
# NVCC Compiler from CUDA Toolkit
NVCC := $(CUDA_PATH)/bin/nvcc

# Include directories for CUDA and OpenCV
INCLUDES := -I$(CUDA_PATH)/include $(shell pkg-config --cflags opencv4)

# Library paths for CUDA and OpenCV
# Make sure to include the path to the CUDA lib64 directory and link against the CUDA runtime
LIBRARIES := -L$(CUDA_PATH)/lib64 -lcudart $(shell pkg-config --libs opencv4)

# Compiler flags
CXXFLAGS := -std=c++11 -Wall
NVCCFLAGS := -std=c++11 -Xcompiler -Wall

# Determine architecture-specific flags
SMS ?= 50 52 61 75 # Example architectures, specify your target architectures
GENCODE_FLAGS := $(foreach sm,$(SMS),-gencode arch=compute_$(sm),code=sm_$(sm))

# Target executable
TARGET := dnn

all: build

build: $(TARGET)

$(TARGET): dnn.o blur_effect.o
	$(CXX) $^ $(LIBRARIES) -o $@

dnn.o: dnn.cpp
	$(NVCC) $(INCLUDES) $(NVCCFLAGS) $(GENCODE_FLAGS) -c $< -o $@

# Add this rule for compiling blur_effect.cu
blur_effect.o: blur_effect.cu blur_effect.h
	$(NVCC) $(INCLUDES) $(NVCCFLAGS) $(GENCODE_FLAGS) -c $< -o $@

clean:
	rm -f $(TARGET) *.o

run: build
	./$(TARGET)

.PHONY: all build clean run
